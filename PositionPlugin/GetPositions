import pandas as pd
import json
import requests
import urllib.parse

class YourClassName:  

    def __init__(self, url):
        self._session = requests.Session()
        self._url = url

    def login(self, username, password):
        data = urllib.parse.urlencode({'login': username, 'password': password})
        headers = {"Content-Type": "application/x-www-form-urlencoded"}
        with self._session.post(self._url + '/api/session/login', data=data, headers=headers) as r:
            if r.status_code == 403:
                raise LoginError(r.text)
            self.check_http_errors(r)

    def post_message(self, url, message):
        response = self._session.post(url, json=message)
        return response

    def check_http_errors(self, response):
        if response.status_code != 200:
            raise Exception(f"HTTP Error: {response.status_code}. Reason: {response.text}")

    def main(self):
        self.login('automation1_UAT', 'qegQBqwXAa_1')
        
        # Read data from the GetPositionsFrom sheet
        df = pd.read_excel(r'C:\Users\ranlev\Documents\Horizon OMS UAT\Rest API\Script\1000NamesUpload.xlsx', sheet_name='GetPositionsFrom')
        
        # Prepare the message body
        message = {
            "positions": []
        }
        
        # Iterate over rows in the dataframe and append to the positions list
        for index, row in df.iterrows():
            position = {
                "portfolioId": row["portfolioId"],
                "uniqueId": row["uniqueId"]
            }
            message["positions"].append(position)

        # Print the message to be sent
        print("Message to be sent:", json.dumps(message))

        # Make the GET request to fetch the message structure
        response = self.post_message(self._url + '/api/aeron/position/select', message)

        if response.status_code == 200:
            print("Message successfully posted.")
            # Handle the response data as needed
        else:
            print("Error:", response.text)

if __name__ == "__main__":
    url = 'http://10.82.4.24:8080'  # Update the URL as needed
    YourClassName(url).main()
